name: PR Validation

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Code formatting check
        run: pnpm format:check

      - name: Lint code
        run: pnpm lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Run unit tests
        run: pnpm test --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: quality-gates
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Build application
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .next/
            public/
          retention-days: 1

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build-verification
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Start application in background
        run: |
          echo "Starting Next.js application..."
          pnpm start &
          echo $! > .next_pid
        env:
          PORT: 3000

      - name: Wait for application to be ready
        run: |
          echo "Waiting for application to start on http://localhost:3000..."
          pnpm exec wait-on http://localhost:3000 --timeout 60000 --interval 2000 --verbose
          echo "Application is ready!"

      - name: Verify application is responding
        run: |
          echo "Testing application health..."
          curl -f http://localhost:3000/api/health || echo "Health endpoint not available"
          curl -I http://localhost:3000 || echo "Root endpoint not available"

      - name: Run E2E tests
        run: pnpm dlx playwright test

      - name: Stop application
        if: always()
        run: |
          if [ -f .next_pid ]; then
            kill $(cat .next_pid) || true
            rm .next_pid
          fi
          # Fallback: kill any remaining Next.js processes
          pkill -f "next start" || true

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-results
          path: test-results/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: quality-gates
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Audit dependencies
        run: pnpm audit --audit-level=high
        continue-on-error: true
