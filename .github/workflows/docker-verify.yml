name: Docker Build Verification

on:
  pull_request:
    paths:
      - 'Dockerfile'
      - 'next.config.ts'
      - '.dockerignore'
  workflow_dispatch:

# Note: This workflow may fail if Docker registry is not set up yet
# This is expected and won't block the main CI/CD pipeline

jobs:
  verify-docker-build:
    name: Verify Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Build Next.js application
        run: pnpm build

      - name: Verify build output structure
        run: |
          echo "Checking build structure..."
          ls -la .next/

          # Verify BUILD_ID exists
          if [ -f ".next/BUILD_ID" ]; then
            echo "✅ BUILD_ID found: $(cat .next/BUILD_ID)"
          else
            echo "❌ BUILD_ID not found"
            exit 1
          fi

          # Verify static files
          if [ -d ".next/static" ]; then
            echo "✅ Static files directory found"
          else
            echo "❌ Static files directory not found"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: smart-cv-builder:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Start container in background
          echo "Starting Docker container..."
          docker run -d --name test-container -p 3000:3000 smart-cv-builder:test

          # Wait for container to be ready
          echo "Waiting for container to start..."
          sleep 10

          # Check if container is running
          if ! docker ps | grep test-container; then
            echo "❌ Container failed to start"
            docker logs test-container
            exit 1
          fi

          # Use wait-on for more reliable health checking
          echo "Waiting for application to be ready..."
          pnpm exec wait-on http://localhost:3000/api/health --timeout 60000 --interval 2000 --verbose || {
            echo "❌ Application failed to start within 60 seconds"
            echo "Container logs:"
            docker logs test-container
            echo "Container status:"
            docker ps -a | grep test-container
            exit 1
          }

          # Test endpoints
          echo "Testing application endpoints..."
          curl -f http://localhost:3000/api/health && echo "✅ Health endpoint working"
          curl -I http://localhost:3000 && echo "✅ Root endpoint working"

          echo "✅ Docker image test completed successfully"
          docker logs test-container --tail 10

        # Always cleanup, even if tests fail
      - name: Cleanup Docker container
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true
